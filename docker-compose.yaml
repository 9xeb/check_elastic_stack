version: '3.9'

services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.17.3
    # <<: *elasticsearch-common
    hostname: es{{.Task.Slot}}
    volumes:
      - certs:/usr/share/elasticsearch/config/certs
      # - esdata03:/usr/share/elasticsearch/data
    environment:
      - node.name=es{{.Task.Slot}}
      - cluster.name=docker-cluster
      - cluster.initial_master_nodes=es1,es2,es3
      - discovery.seed_hosts=es1,es2
      - ELASTIC_PASSWORD=changeme
      # - ES_JAVA_OPTS="-Xms2g -Xmx2g"
      - bootstrap.memory_lock=true
      - xpack.security.enabled=true
      - xpack.security.http.ssl.enabled=true
      - xpack.security.http.ssl.key=certs/es{{.Task.Slot}}/es{{.Task.Slot}}.key
      - xpack.security.http.ssl.certificate=certs/es{{.Task.Slot}}/es{{.Task.Slot}}.crt
      - xpack.security.http.ssl.certificate_authorities=certs/ca/ca.crt
      - xpack.security.transport.ssl.enabled=true
      - xpack.security.transport.ssl.key=certs/es{{.Task.Slot}}/es{{.Task.Slot}}.key
      - xpack.security.transport.ssl.certificate=certs/es{{.Task.Slot}}/es{{.Task.Slot}}.crt
      - xpack.security.transport.ssl.certificate_authorities=certs/ca/ca.crt
      - xpack.security.transport.ssl.verification_mode=certificate
      - xpack.license.self_generated.type=basic
      - xpack.ml.use_auto_machine_memory_percent=true
    # mem_limit: ${MEM_LIMIT}
    ulimits:
      memlock:
        soft: -1
        hard: -1
    deploy:
      resources:
        limits:
          memory: 1G
      replicas: 3

  setup:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.17.3
    volumes:
      - certs:/usr/share/elasticsearch/config/certs
    user: "0"
    command: >
      bash -c '
        ELASTIC_PASSWORD=changeme
        KIBANA_PASSWORD=changeme
        if [ ! -f config/certs/ca.zip ]; then
          echo "Creating CA";
          bin/elasticsearch-certutil ca --silent --pem -out config/certs/ca.zip;
          unzip config/certs/ca.zip -d config/certs;
        fi;
        if [ ! -f config/certs/certs.zip ]; then
          echo "Creating certs";
          echo -ne \
          "instances:\n"\
          "  - name: es1\n"\
          "    dns:\n"\
          "      - es1\n"\
          "      - localhost\n"\
          "    ip:\n"\
          "      - 127.0.0.1\n"\
          "  - name: es2\n"\
          "    dns:\n"\
          "      - es2\n"\
          "      - localhost\n"\
          "    ip:\n"\
          "      - 127.0.0.1\n"\
          "  - name: es3\n"\
          "    dns:\n"\
          "      - es3\n"\
          "      - localhost\n"\
          "    ip:\n"\
          "      - 127.0.0.1\n"\
          > config/certs/instances.yml;
          bin/elasticsearch-certutil cert --silent --pem -out config/certs/certs.zip --in config/certs/instances.yml --ca-cert config/certs/ca/ca.crt --ca-key config/certs/ca/ca.key;
          unzip config/certs/certs.zip -d config/certs;
        fi;
        echo "Setting file permissions"
        chown -R root:root config/certs;
        find . -type d -exec chmod 750 \{\} \;;
        find . -type f -exec chmod 640 \{\} \;;
        echo "Waiting for Elasticsearch availability";
        until curl -s --cacert config/certs/ca/ca.crt https://es1:9200 | grep -q "missing authentication credentials"; do sleep 30; done;
        echo "Setting kibana_system password";
        until curl -s -X POST --cacert config/certs/ca/ca.crt -u "elastic:changeme" -H "Content-Type: application/json" https://es1:9200/_security/user/kibana_system/_password -d "{\"password\":\"changeme\"}" | grep -q "^{}"; do sleep 10; done;
        echo "All done!";
        sleep inf;
      '
    healthcheck:
      test: ["CMD-SHELL", "[ -f config/certs/es1/es1.crt ]"]
      interval: 1s
      timeout: 5s
      retries: 120
    deploy:
      replicas: 1

  # kibana:
  #   # depends_on:
  #   #   - elasticsearch
  #   image: docker.elastic.co/kibana/kibana:8.17.3
  #   volumes:
  #     - certs:/usr/share/kibana/config/certs
  #     # - kibanadata:/usr/share/kibana/data
  #   # ports:
  #   #   - 5601:5601
  #   environment:
  #     - SERVERNAME=kibana
  #     - ELASTICSEARCH_HOSTS=https://es1:9200
  #     - ELASTICSEARCH_USERNAME=kibana_system
  #     - ELASTICSEARCH_PASSWORD=changeme
  #     - ELASTICSEARCH_SSL_CERTIFICATEAUTHORITIES=config/certs/ca/ca.crt
  #   # mem_limit: ${MEM_LIMIT}
  #   healthcheck:
  #     test:
  #       [
  #         "CMD-SHELL",
  #         "curl -s -I http://localhost:5601 | grep -q 'HTTP/1.1 302 Found'",
  #       ]
  #     interval: 10s
  #     timeout: 10s
  #     retries: 120
  #   deploy:
  #     resources:
  #       limits:
  #         memory: 1G
  #     # replicas: 3

volumes:
  certs:
#   esdata01:
#     driver: local
#   esdata02:
#     driver: local
#   esdata03:
#     driver: local
#   kibanadata:
#     driver: local
