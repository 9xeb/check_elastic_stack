// command definition
object CheckCommand "check_elastic_stack" {
  command = [ PluginDir + "/check_elastic_stack" ]

  arguments = {
    "--check" = {
        required = true
        value = "$elastic_context$"
    }
    "--host" = {
        required = true
        value = "$elastic_host$"
    }
    "--user" = {
        required = true
        value = "$elastic_user$"
    }
    "--password" = {
        required = true
        value = "$elastic_password$"
    }
    "--timeout" = "$elastic_timeout_seconds$"
    "--skip-tls" = {
      set_if = "$elastic_skip_tls$"
    }
  }

  vars.elastic_host = "$address$"
}

// service template
template Service "ElasticServiceTemplate" {
  check_command = "check_elastic_stack"
  vars.elastic_context = "elasticsearch"
  vars.elastic_user = "elastic"
  vars.elastic_password = "changeme"
}

// service apply rule
apply Service "ElasticServiceTemplate" {
  import "ElasticServiceTemplate"
  // create a service for hosts with a certain label
  assign where host.address && host.vars.apps == "elastic"
}

// example host that trigger service apply rule
object Host "ElasticsearchNode" {
  address = "127.0.0.1"
  check_command = "hostalive"
  vars.app = "elastic"
}